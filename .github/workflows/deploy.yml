name: "Deploy"

on:
  push:
    tags:
      - '*'

env:
  IMAGE_NAME: "kozhurkin/logr"
  DEPLOY_DIRECTORY: "/home/logr/logr"
  CONTAINER_NAME: "logr-container"


jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'

      - name: Run tests
        run: go test ./tests -run=. -v -race -count=1

  image-build-and-push:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Checkout tag with submodules
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag }}
          submodules: true

      - name: Show commit information
        run: |
          echo "Main repo commit: $(git rev-parse HEAD)"
          git submodule foreach 'echo "Submodule $name commit: $(git rev-parse HEAD)"'
          git log
          du -sh ./*
          du -sh ./frontend/*

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build ./ --no-cache --push \
            -t $IMAGE_NAME:${{ github.ref_name }} \
            -t $IMAGE_NAME:latest \
            -f ./Dockerhub/Dockerfile \
            --platform linux/amd64,linux/arm64

  deploy-k3s:
    runs-on: ubuntu-latest
    needs: image-build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Apply Kubernetes manifests
        env:
          VERSION: ${{ github.ref_name }}
          OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
          OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
        run: |
          cat ./deploy/deployment.yaml | envsubst | kubectl apply -f -
          kubectl top node

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push
    steps:
      - name: Deploy image via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          envs: CONTAINER_NAME,IMAGE_NAME
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker stop $CONTAINER_NAME || true
            sudo docker rm $CONTAINER_NAME || true
            sudo docker run -d \
              -h $(hostname) \
              -e OAUTH_GITHUB_CLIENT_ID=${{ secrets.OAUTH_GITHUB_CLIENT_ID }} \
              -e OAUTH_GITHUB_CLIENT_SECRET=${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }} \
              -e DEMO_DASH_ENABLED=true \
              -e LLM_URL=${{ secrets.LLM_URL }} \
              -e RECAPTCHA_SECRET=${{ secrets.RECAPTCHA_SECRET }} \
              -v "$(pwd)/clickhouse_data:/var/lib/clickhouse" \
              -v "$(pwd)/mysql_data:/var/lib/mysql" \
              -p 7776:7776/udp -p 7778:7778 --name $CONTAINER_NAME $IMAGE_NAME:${{ github.ref_name }}