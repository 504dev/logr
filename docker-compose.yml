version: '2.4'

volumes:
  clickhouse-volume:
  mysql-volume:

services:
  templator:
    image: bash
    working_dir: /opt/logr
    healthcheck:
      test: ps -o comm | grep -q templator && exit 1 || exit 0
      interval: 1s
      timeout: 2s
      retries: 600
    volumes:
      - ./:/opt/logr
    command: bash -c "templates/templator.sh && sleep 5"

  clickhouse-server:
    image: yandex/clickhouse-server
    depends_on:
      templator:
        condition: service_started
    volumes:
      - clickhouse-volume:/var/lib/clickhouse
      - ./${CLICKHOUSE_USER}.xml:/etc/clickhouse-server/users.d/${CLICKHOUSE_USER}.xml

  clickhouse-client:
    image: yandex/clickhouse-server
    depends_on:
      clickhouse-server:
        condition: service_started
    command: ['clickhouse-client','--host', 'clickhouse-server', '-q CREATE DATABASE IF NOT EXISTS ${CLICKHOUSE_DATABASE}']

  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - mysql-volume:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  frontend:
    image: node:12-alpine
    working_dir: /frontend
    healthcheck:
      test: ps -o comm | grep -q node && exit 1 || exit 0
      interval: 1s
      timeout: 2s
      retries: 180
    volumes:
      - ./frontend:/frontend
    command: sh -c "yarn install && yarn build && sleep 5"

  logr-server:
    ports:
      - "127.0.0.1:7778:7778"
    image: golang:1.13
    working_dir: /opt/logr
    depends_on:
      frontend:
        condition: service_healthy
    restart: always
    volumes:
      - ./:/opt/logr
    command: >
      sh -c 'go build -o logr-server ./cmd/server/main.go && ./logr-server --config="./config.docker.yml"'
